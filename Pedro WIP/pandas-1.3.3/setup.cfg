[metadata]
name = pandas
description = Powerful data structures for data analysis, time series, and statistics
long_description = file: README.md
long_description_content_type = text/markdown
url = https://pandas.pydata.org
author = The Pandas Development Team
author_email = pandas-dev@python.org
license = BSD-3-Clause
license_file = LICENSE
platforms = any
classifiers = 
	Development Status :: 5 - Production/Stable
	Environment :: Console
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Operating System :: OS Independent
	Programming Language :: Cython
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Topic :: Scientific/Engineering
project_urls = 
	Bug Tracker = https://github.com/pandas-dev/pandas/issues
	Documentation = https://pandas.pydata.org/pandas-docs/stable
	Source Code = https://github.com/pandas-dev/pandas

[options]
packages = find:
install_requires = 
	numpy>=1.17.3
	python-dateutil>=2.7.3
	pytz>=2017.3
python_requires = >=3.7.1
include_package_data = True
zip_safe = False

[options.entry_points]
pandas_plotting_backends = 
	matplotlib = pandas:plotting._matplotlib

[options.extras_require]
test = 
	hypothesis>=3.58
	pytest>=6.0
	pytest-xdist

[options.package_data]
* = templates/*, _libs/**/*.dll

[build_ext]
inplace = True

[options.packages.find]
include = pandas, pandas.*

[versioneer]
vcs = git
style = pep440
versionfile_source = pandas/_version.py
versionfile_build = pandas/_version.py
tag_prefix = v
parentdir_prefix = pandas-

[flake8]
max-line-length = 88
ignore = 
	E203,  # space before : (needed for how black formats slicing)
	W503,  # line break before binary operator
	W504,  # line break after binary operator
	E402,  # module level import not at top of file
	E731,  # do not assign a lambda expression, use a def
	S001,  # found modulo formatter (incorrect picks up mod operations)
	B005,  # controversial
	B006,  # controversial
	B007,  # controversial
	B008,  # controversial
	B009,  # setattr is used to side-step mypy
	B010,  # getattr is used to side-step mypy
	B011,  # tests use assert False
	B015,  # tests use comparisons but not their returned value
	B301   # false positives
exclude = 
	doc/sphinxext/*.py,
	doc/build/*.py,
	doc/temp/*.py,
	.eggs/*.py,
	versioneer.py,
	env  # exclude asv benchmark environments from linting
per-file-ignores = 
	pandas/tests/*:PDF020
	pandas/tests/extension/*:PDF009
	doc/make.py:PDF008
	pandas/testing.py:PDF014

[flake8-rst]
max-line-length = 84
bootstrap = 
	import numpy as np
	import pandas as pd
	np  # avoiding error when importing again numpy or pandas
	pd  # (in some cases we want to do it to show users)
ignore = 
	E203,  # space before : (needed for how black formats slicing)
	E402,  # module level import not at top of file
	W503,  # line break before binary operator
	E302,  # expected 2 blank lines, found 0
	E305,  # expected 2 blank lines after class or function definition, found 0
	E703,  # statement ends with a semicolon
	E711,  # comparison to none should be 'if cond is none:'
exclude = 
	doc/source/development/contributing_docstring.rst,
	doc/source/getting_started/comparison/includes/*.rst

[codespell]
ignore-words-list = ba,blocs,coo,hist,nd,sav,ser
ignore-regex = https://(\w+\.)+

[coverage:run]
branch = True
omit = 
	*/tests/*
	pandas/_typing.py
	pandas/_version.py
plugins = Cython.Coverage
source = pandas

[coverage:report]
ignore_errors = False
show_missing = True
omit = 
	pandas/_version.py
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	AbstractMethodError
	
	if 0:
	if __name__ == .__main__.:
	if TYPE_CHECKING:

[coverage:html]
directory = coverage_html_report

[isort]
known_pre_libs = pandas._config
known_pre_core = pandas._libs,pandas._typing,pandas.util._*,pandas.compat,pandas.errors
known_dtypes = pandas.core.dtypes
known_post_core = pandas.tseries,pandas.io,pandas.plotting
sections = FUTURE,STDLIB,THIRDPARTY,PRE_LIBS,PRE_CORE,DTYPES,FIRSTPARTY,POST_CORE,LOCALFOLDER
profile = black
combine_as_imports = True
line_length = 88
force_grid_wrap = True
force_sort_within_sections = True
skip_glob = env,
skip = pandas/__init__.py

[mypy]
platform = linux-64
ignore_missing_imports = True
no_implicit_optional = True
check_untyped_defs = True
strict_equality = True
warn_redundant_casts = True
warn_unused_ignores = True
show_error_codes = True

[mypy-pandas.tests.*]
check_untyped_defs = False

[mypy-pandas._version]
check_untyped_defs = False

[mypy-pandas.io.clipboard]
check_untyped_defs = False

[mypy-pandas.io.formats.string]
ignore_errors = True

[mypy-pandas.tests.apply.test_series_apply]
ignore_errors = True

[mypy-pandas.tests.arithmetic.conftest]
ignore_errors = True

[mypy-pandas.tests.arrays.sparse.test_combine_concat]
ignore_errors = True

[mypy-pandas.tests.dtypes.test_common]
ignore_errors = True

[mypy-pandas.tests.frame.methods.test_to_records]
ignore_errors = True

[mypy-pandas.tests.groupby.test_rank]
ignore_errors = True

[mypy-pandas.tests.groupby.transform.test_transform]
ignore_errors = True

[mypy-pandas.tests.indexes.interval.test_interval]
ignore_errors = True

[mypy-pandas.tests.indexing.test_categorical]
ignore_errors = True

[mypy-pandas.tests.io.excel.test_writers]
ignore_errors = True

[mypy-pandas.tests.reductions.test_reductions]
ignore_errors = True

[mypy-pandas.tests.test_expressions]
ignore_errors = True

[egg_info]
tag_build = 
tag_date = 0

